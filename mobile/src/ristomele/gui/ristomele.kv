#:import ListAdapter kivy.adapters.listadapter.ListAdapter
#:import SimpleListAdapter kivy.adapters.simplelistadapter.SimpleListAdapter
#:import Factory kivy.factory.Factory
#:import get_color_from_hex kivy.utils.get_color_from_hex
#:import icon kivy.garden.iconfonts.icon
#:import XCamera kivy.garden.xcamera.XCamera
#:import darker kivy.garden.xcamera.darker
#:import Theme ristomele.gui.uix.Theme

# =====================================================================
# common styles
# =====================================================================


<FlatButton>:
    background_color: (1, 1, 1, 1)
    _down_color: darker(self.background_color)
    color: Theme.PRIMARY
    disabled_color: Theme.MUTED
    show_border: True
    font_size: app.font_size

    canvas.before:
        Color:
            rgba: self.background_color if self.state == 'normal' else self._down_color

        Rectangle:
            pos: self.pos
            size: self.size

        Color:
            rgba: Theme.SEPARATOR if self.show_border else Theme.TRANSPARENT

        Line:
            rectangle: self.x+1,self.y+1,self.width-1,self.height-1


<IconButton@FlatButton>:
    icon: ""
    markup: True
    show_border: False
    color: Theme.ICON
    text: icon(self.icon) if self.icon else ""
    size_hint_x: None
    width: self.height

<Header@MyLabel>:
    size_hint_y: None
    height: app.std_height + dp(10)

<MyTextInput@TextInput>:
    font_size: app.font_size

# ==========
# main menu
# ==========

<MainScreen>:
    BoxLayout:
        orientation: 'vertical'

        Header:
            text: "Menu Principale"

        FlatButton:
            text: "Mappa tavoli"
            on_release: app.show_tables()

        FlatButton:
            text: "Lista ordini"
            on_release: app.show_orders()

        FlatButton:
            text: "Configura tavoli"
            on_release: app.edit_tables()

        BoxLayout:
            orientation: 'horizontal'
            height: app.std_height

            FlatButton:
                text: "Opzioni"
                on_release: app.open_settings()

            BoxLayout:
                orientation: 'vertical'
                size_hint: 0.25, 1

                IconButton:
                    icon: 'fa-plus'
                    size_hint: 1, 0.5
                    on_release: app.font_size += 1
                    show_border: True

                IconButton:
                    icon: 'fa-minus'
                    size_hint: 1, 0.5
                    on_release: app.font_size -= 1
                    show_border: True

        # FlatButton:
        #     text: "Bluetooth info"
        #     on_release: app.bluetooth_info()
        #     size_hint_y: None
        #     height: app.std_height


# =====================================================================
# tables.py
# =====================================================================

<TablesScreen>:
    BoxLayout:
        id: layout
        orientation: 'vertical'

        Header:
            text: "Mappa dei tavoli"

        GridLayout:
            id: grid

        BoxLayout:
            id: layout
            orientation: 'horizontal'
            height: app.std_height
            size_hint_y: None

            FlatButton:
                text: "Lista ordini"
                on_release: app.show_orders()

            FlatButton:
                text: "Indietro"
                on_release: app.root.go_back()


<TableWidget>:
    canvas.after:
        Color:
            rgba: Theme.MUTED

        Line:
            rectangle: self.x+1,self.y+1,self.width-1,self.height-1

    orientation: 'vertical'

    FlatButton:
        id: main_button
        text: root.table.name
        show_border: False

    FlatButton:
        id: name_button
        text: root.table.waiter
        color: Theme.ICON
        show_border: False
        size_hint_y: None
        height: app.std_height

<EditTablesScreen>:
    BoxLayout:
        id: layout
        orientation: 'vertical'

        Header:
            text: "Modifica tavoli"

        MyTextInput:
            id: waiter_name
            hint_text: 'Nome cameriere'
            size_hint_y: None
            height: app.std_height
            multiline: False

        GridLayout:
            id: grid

        BoxLayout:
            id: layout
            orientation: 'horizontal'
            height: app.std_height
            size_hint_y: None

            FlatButton:
                text: "Salva"
                on_release: root.save(app)

            FlatButton:
                text: "Annulla"
                on_release: app.root.go_back()

# =====================================================================
# order.py
# =====================================================================

<OrderItem>:
    layout: 'horizontal'
    height: app.std_height
    size_hint_y: None
    current_cashier: app.get_cashier()
    fgcolor: Theme.PRIMARY if root.order.cashier == root.current_cashier else Theme.MUTED

    canvas.after:
        Color:
            rgba: Theme.SEPARATOR
        Rectangle:
            pos: self.pos
            size: self.width, dp(1)

    FlatButton:
        text: "%s   %s" % (root.order.textual_id(), root.order.table.name)
        show_border: False
        on_release: app.show_order(root.order)
        color: root.fgcolor
        size_hint_x: 1

    FlatButton:
        text: root.order.cashier
        show_border: False
        color: root.fgcolor
        on_release: app.show_order(root.order)

<OrderListScreen>:
    BoxLayout:
        id: layout
        orientation: 'vertical'

        Header:
            text: "Lista ordini"

        ListView:
            adapter: SimpleListAdapter(data=root.orders, cls=Factory.OrderItem, args_converter=lambda i, x: {'order': x})

        FlatButton:
            text: "Indietro"
            size_hint_y: None
            height: app.std_height
            on_release: app.root.go_back()


<MenuItem>:
    orientation: 'horizontal'
    height: app.std_height
    size_hint_y: None

    MyLabel:
        text: root.item.name
        text_size: self.size
        padding_x: 20
        size_hint_x: 0.75

    BoxLayout:
        orientation: 'horizontal'
        size_hint_x: 0.25
        IconButton:
            icon: 'fa-minus'
            background_color: Theme.BGDANGER
            on_release: root.item.count = max(root.item.count-1, 0)

        MyLabel:
            text: str(root.item.count)

        IconButton:
            icon: 'fa-plus'
            background_color: Theme.BGSUCCESS
            on_release: root.item.count += 1

<MenuSeparator>:
    orientation: 'horizontal'
    height: app.std_height
    size_hint_y: None
    MyLabel:
        text: "[b]%s[/b]" % root.item.name
        markup: True
        text_size: self.size
        padding_x: 10
        color: (0, 0, 0, 1)

<NewOrderScreen>:
    BoxLayout:
        id: layout
        orientation: 'vertical'

        Header:
            text: "Tavolo: %s" % root.order.table.name

        MyTextInput:
            id: customer_name
            hint_text: 'Nome'
            size_hint_y: None
            height: app.std_height
            multiline: False

        MyTextInput:
            id: notes
            hint_text: 'Note'
            size_hint_y: None
            height: app.std_height
            multiline: False

        ListView:
            id: item_list
            adapter: ListAdapter(data=root.order.menu, cls=root.item_class, args_converter=lambda i, x: {'x': x})

        BoxLayout:
            id: layout
            orientation: 'horizontal'
            height: app.std_height
            size_hint_y: None

            FlatButton:
                text: "OK"
                on_release: root.submit(app)

            FlatButton:
                text: "Indietro"
                on_release: app.root.go_back()



<ShowOrderScreen>:
    BoxLayout:
        id: layout
        orientation: 'vertical'

        Header:
            text: "Riepilogo ordine"

        MyLabel:
            text: "Totale: %.2f" % root.order.get_total()
            size_hint_y: None
            height: app.std_height
            halign: 'right'
            text_size: self.size
            padding: '5dp', '5dp'

        BoxLayout:
            orientation: 'horizontal'
            height: app.std_height
            size_hint_y: None

            MyTextInput:
                id: money
                hint_text: "Denaro ricevuto"
                input_type: "number"
                on_text: root.update_rest()

            MyLabel:
                id: rest
                text: "Resto:"
                halign: 'right'
                text_size: self.size
                padding: '5dp', '5dp'

        MyLabel: # this is just an empty spacer
            text: ""
            size_hint_y: None
            height: app.std_height

        ScrollView:
            size_hint_y: 1
            MyLabel:
                id: content
                text: root.order.as_textual_receipt()
                height: self.texture_size[1]
                size_hint_y: None
                color: (0, 0, 0, 1)
                font_name: 'RobotoMono-Regular'

        BoxLayout:
            id: layout
            orientation: 'horizontal'
            height: app.std_height
            size_hint_y: None

            FlatButton:
                text: "Ristampa" if root.order.is_saved else "Salva"
                on_release: root.save_or_reprint(app)

            FlatButton:
                text: "Ricevuta"
                disabled: not root.order.is_saved
                on_release: app.print_receipt(root.order)

            FlatButton:
                text: "Bar"
                disabled: not root.order.is_saved

            FlatButton:
                text: "Indietro"
                on_release: root.go_back_dwim(app)
